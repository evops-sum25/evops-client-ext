syntax = "proto3";
package evops.markdown.v1;

service MarkdownService {
  rpc Parse(ParseRequest) returns (ParseResponse);
}

message ParseRequest {
  string text = 1;
}

message ParseResponse {
  repeated RootChild children = 1;
  Position position = 2;
}

message Point {
  uint32 line = 1;
  uint32 column = 2;
  uint32 offset = 3;
}

message Position {
  Point start = 1;
  Point end = 2;
}

message RootChild {
  oneof child {
    Paragraph paragraph = 1;
    Heading heading = 2;
    List list = 3;
    Blockquote blockquote = 4;
    Code code = 5;
    ThematicBreak thematic_break = 6;
  }
}

message Paragraph {
  repeated ParagraphChild children = 1;
  Position position = 2;
}

message ParagraphChild {
  oneof child {
    Text text = 1;
    Strong strong = 2;
    Emphasis emphasis = 3;
    Delete delete = 4;
    InlineCode inline_code = 5;
    Link link = 6;
  }
}

message Text {
  string value = 1;
  Position position = 2;
}

message Strong {
  repeated ParagraphChild children = 1;
  Position position = 2;
}

message Emphasis {
  repeated ParagraphChild children = 1;
  Position position = 2;
}

message Delete {
  repeated ParagraphChild children = 1;
  Position position = 2;
}

message InlineCode {
  string value = 1;
  Position position = 2;
}

message Link {
  repeated LinkChild children = 1;
  Position position = 2;
  string url = 3;
}

message LinkChild {
  oneof child {
    Text text = 1;
    Strong strong = 2;
    Emphasis emphasis = 3;
    Delete delete = 4;
    InlineCode inline_code = 5;
  }
}

message Heading {
  repeated ParagraphChild children = 1;
  Position position = 2;
  HeadingDepth depth = 3;
}

enum HeadingDepth {
  HEADING_DEPTH_UNSPECIFIED = 0;
  HEADING_DEPTH_1 = 1;
  HEADING_DEPTH_2 = 2;
  HEADING_DEPTH_3 = 3;
  HEADING_DEPTH_4 = 4;
  HEADING_DEPTH_5 = 5;
  HEADING_DEPTH_6 = 6;
}

message List {
  repeated ListItem children = 1;
  Position position = 2;
  bool ordered = 3;
  bool spread = 4;
}

message ListItem {
  repeated RootChild children = 1;
  Position position = 2;
  bool spread = 3;
}

message Blockquote {
  repeated RootChild children = 1;
  Position position = 2;
}

message Code {
  string value = 1;
  Position position = 2;
  optional string lang = 3;
}

message ThematicBreak {
  Position position = 1;
}
